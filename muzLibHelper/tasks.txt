
Задачи:
*+ запрос с заменой ID на значения
*+ убрать кавычки у полуй в запросах
*- парс ответов не по индексам, а по именам столбцов
* проверка, чтобы авторы одного трека не повторялись, т.е. Track  Af1  Af1  не пропускаем
*+ вывод авторов через зяпятую в одну колонку (сортировка а-я)
*+ ввод/вывод версси трека
*+ таблица связей треков
* функции поиска всех связей и детей треков
* интерфейс
    *+ простой ввод (имя, авторы, файл, группа, версия)
    * доработать вывод ошибок
    * расширенный ввод (со связями и прочим)
* сосздание БД и заполнение старыми логами
* функции сверки записей в БД с файлами в ФС
* функции поиска дубликатов и похожих записей в БД
* функция проверки деревьев связей треков (чтобы у трека не было несколько родителей - НЕТ - у трека м.б. несколько родителей, например, слова от одной, а музыка от другой)
* предупреждение о создании нового автора, группы
* неточный поиск
* удаление треков из БД
* сделать некоторые текстовые поля в БД уникальными

* модуль безопасной работы с БД
    *+ работа через временный файл БД. Применение изменений в основную БД только по команде оператора.
    *+ список всех команд записи во временную БД
    * врем. файл не удалять до применения. После перезапуска продолжать его использовать
    * лог в файл
    * возможность отката команд записи
* применение временного файла по кнопке
* предупреждение при закрытии, что врем. файл не применён
* удаление врем. файла при закрытии


SELECT
Tracks.name,
Autors.name as 'Autor',
Tracks.File
FROM Tracks, Autors
WHERE
tracks.name='Tr1' and
Autors.Name='Hex'


SELECT
Tracks.name,
A1.Name as Autor1,
A2.Name as Autor2,
Tracks.File
FROM Tracks
JOIN Autors as A1 ON (A1.ID = Tracks.Autor1 OR Tracks.Autor1  = null)
JOIN Autors as A2 ON (A2.ID = Tracks.Autor2 OR Tracks.Autor2 = null)
WHERE
tracks.name='Tr2'


CREATE TABLE "TracksToAutors" (
	"ID"	INTEGER NOT NULL,
	"TrackID"	INTEGER NOT NULL,
	"AutorID"	INTEGER NOT NULL,
	PRIMARY KEY("ID" AUTOINCREMENT),
	FOREIGN KEY("AutorID") REFERENCES "Autors"("ID"),
	FOREIGN KEY("TrackID") REFERENCES "Tracks"("ID")
);


CREATE TABLE "Tracks" (
	"ID"	INTEGER NOT NULL,
	"Name"	TEXT NOT NULL,
	"File"	TEXT,
	PRIMARY KEY("ID" AUTOINCREMENT)
);

Tr2  A1  F2
Tr3  A2  F3
Tr4  A1, A2  F4
Tr5  A3, A4  F5  G1
Tr6  A3  F5  G1
Tr7  A2, A1, A5  F6
Tr8 (v1)  A5  F7
Tr8 (v2)  A5  F8
Tr9  A2, A8  F9


Tr5  ..
..  ..  ..  G1
